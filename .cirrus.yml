# !!NOTE!!
# If any of the image names or python versions change, update bors.toml

pep517_task:
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  container:
    image: python:3

  install_script:
    - pip install --upgrade-strategy eager -U pep517

  script:
    - python3 -m pep517.check .


build_task:
  container:
    image: duckinator/bork
  setup_script:
    - git fetch --tags
  script:
    - bork build
  dist_artifacts:
    path: "dist/**"


docs_task:
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  container:
    image: python:3-slim

  depends_on:
    - build

  install_script:
    - apt update || true ; apt install -qq -y make
    - pip install --upgrade-strategy eager -U -r requirements-docs.txt
    - python .ci/install-wheels.py

  script:
    - make -C docs/ linkcheck
    # TODO: Add -n (nit-picky mode, warn about all missing references)
    - make -C docs/ "SPHINXOPTS=-W" html


task:
  name: "Linux $IMAGE"
  alias: Tests
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  allow_failures: $IMAGE =~ '.*[-:]rc-.*'
  env:
    matrix:
      - IMAGE: python:3.6-slim
      - IMAGE: python:3.7-slim
      - IMAGE: python:3.8-slim
      - IMAGE: python:3.9-slim
      - IMAGE: python:rc-slim
      - IMAGE: pypy:3.6-slim
      - IMAGE: pypy:3.7-slim
      - IMAGE: python:3.10-slim

  container:
    image: $IMAGE

  depends_on:
    - build

  install_script:
    - >-
      if command -v pypy3 >/dev/null || python3 -c 'import sys; exit(sys.implementation.version.releaselevel == "final")'; then
        apt update || true;
        apt install -qq -y pkgconf libsdl-image1.2-dev libsdl-mixer1.2-dev libsdl-ttf2.0-dev libsdl1.2-dev libsmpeg-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev libfreetype6-dev gcc
      fi
    - pip install --upgrade-strategy eager -U -r requirements-tests.txt
    - >-
      if command -v pypy3 >/dev/null; then
        pypy3 .ci/install-wheels.py
      else
        python .ci/install-wheels.py
      fi
    - >-
      apt-get update || true;
      apt-get install -qq -y libsdl2-2.0-0 libsdl2-mixer-2.0-0 libsdl2-image-2.0-0 libsdl2-gfx-1.0-0 libsdl2-ttf-2.0-0

  script:
    - command -v pypy3 >/dev/null && export PY=pypy3
    - ${PY-python3} --version
    - pip list
    - pytest

  use_compute_credits: $CIRRUS_BRANCH == 'staging'


macOS_task:
  alias: Tests
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  osx_instance:
    image: catalina-base
  env:
    PATH: ${HOME}/.pyenv/shims:${PATH}
    matrix:
      # To update: check the output of the most recent macOS_version job
      - PYTHON: 3.6.12
      - PYTHON: 3.7.9
      - PYTHON: 3.8.6
      - PYTHON: 3.9.0
      - PYTHON: 3.10.0
  depends_on:
    - build
  install_script:
    # Per the pyenv homebrew recommendations.
    # https://github.com/pyenv/pyenv/wiki#suggested-build-environment
    # - xcode-select --install  # Unnecessary on Cirrus
    - brew update    
    - brew install openssl readline sqlite3 xz zlib pyenv
    - pyenv install ${PYTHON}
    - pyenv global ${PYTHON}
    - pyenv rehash
    - pip install --upgrade-strategy eager -U -r requirements-tests.txt
    - python .ci/install-wheels.py

  script:
    - python3 --version
    - pip list
    - pytest


macOS_version_task:
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  osx_instance:
    image: catalina-xcode

  install_script:
    # Per the pyenv homebrew recommendations.
    # https://github.com/pyenv/pyenv/wiki#suggested-build-environment
    - brew install openssl readline pyenv

  script:
    - pyenv install --list


task:
  name: "Windows $IMAGE"
  alias: Tests
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  allow_failures: $IMAGE =~ '.*[-:]rc-.*'
  windows_container:
    os_version: 2019
    image: $IMAGE

  env:
    matrix:
      - IMAGE: python:3.6-windowsservercore
      - IMAGE: python:3.7-windowsservercore
      - IMAGE: python:3.8-windowsservercore
      - IMAGE: python:3.9-windowsservercore
      - IMAGE: python:3.10-windowsservercore
      - IMAGE: python:rc-windowsservercore

  install_script:
    - C:\Python\python.exe -m pip install --upgrade-strategy eager -U -r requirements-tests.txt
    - C:\Python\python.exe .ci/install-wheels.py

  script:
    - C:\Python\python.exe --version
    - C:\Python\python.exe -m pip list
    - C:\Python\python.exe -m pytest


upload_task:
  only_if: $CIRRUS_BRANCH == $CIRRUS_DEFAULT_BRANCH || $CIRRUS_RELEASE != ''
  depends_on:
    - build
    - docs
    - pep517
    - Tests
  env:
    TWINE_TEST_TOKEN: "ENCRYPTED[4df6a9281bcbab67052d63d8ba4f5ee404d57fd95158e0e6e8693ac6b6ae0e2f2ec0ae8ac09a1fe9998b4675d6ccd7c2]"
    TWINE_PROD_TOKEN: "ENCRYPTED[7ea667df4087e85f59575b59f07b2ef8da992831d45e0a0c60869aed64be252e4373b45b6a9f323a6a6365337bac0a7e]"
    GITHUB_TOKEN: "ENCRYPTED[ccd4e010b92a6bdceff3ef970aa96283daf4a040b742bf608a25422f52c93c3513d6bee66c52672f6a6796de7d8b0b11]"

  container:
    image: xonsh/xonsh:slim

  install_script:
    - pip install twine

  script:
    - xonsh .ci/upload.xsh

  examples_artifacts:
    path: "examples.zip"